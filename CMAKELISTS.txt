# --------------------------------------------------------
# Jeffrey CMAKE, this will generate the make file we need.
# Team 6 Bits
# --------------------------------------------------------

# Check if using linux.
if(LINUX)
    # Main Project Settings
    cmake_minimum_required(VERSION 2.8.9)   # The minimum CMAKE version required.
    project (jeffrey)                       # Project Name

    # Binary locations.
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

    # Setup the compiler
    set(CMAKE_CXX_COMPILER "/usr/local/oecore-x86_64/sysroots/x86_64-nilrtsdk-linux/usr/bin/arm-nilrt-linux-gnueabi/arm-nilrt-linux-gnueabi-g++")
    set(CMAKE_C_FLAGS "--sysroot=/usr/local/oecore-x86_64/sysroots/cortexa9-vfpv3-nilrt-linux-gnueabi -std=c++11 -pthread")

    # All headers for the project.
    include_directories(include)

    # Retrieve all cpp files in the /src/ folder.
    file(GLOB SOURCES "${CMAKE_BINARY_DIR}/src/*.cpp")
    add_executable(jeffrey ${SOURCES})

    # Add libraries needed.
    target_link_libraries(jeffrey ${CMAKE_SOURCE_DIR}/lib/imageSender/libimagesender.a)
    target_link_libraries(jeffrey ${CMAKE_SOURCE_DIR}/lib/openCV/libade.a)
    target_link_libraries(jeffrey ${CMAKE_SOURCE_DIR}/lib/myrio/libmyrio.a)
    target_link_libraries(jeffrey ${CMAKE_SOURCE_DIR}/lib/myrio/csupport/libcsupport.a)
else()
    message(FATAL_ERROR "Cannot generate makefile. You need to be running on linux to perform these actions.")
endif()